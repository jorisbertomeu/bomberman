//
// main.cpp for  in /home/jobertomeu/Work/bomberman/mapGenerator
//
// Made by Joris Bertomeu
// Login   <jobertomeu@epitech.net>
//
// Started on  Tue May 26 12:09:50 2015 Joris Bertomeu
// Last update Tue Jun  9 10:01:40 2015 Joris Bertomeu
//

#include	<iostream>
#include	<cstdlib>
#include	<ctime>
#include	<string>
#include	<fstream>

int		main(int ac, char *argv[])
{
  int		x, y, ECART, ORIGIN;
  float		SCALE;
  std::fstream	fs;

  if (ac != 6) {
    std::cout << "Usage : " << argv[0] << " <x> <y> <margin> <scale> <origin>" << std::endl;
    return (-1);
  }
  x = atoi(argv[1]);
  y = atoi(argv[2]);
  ECART = atoi(argv[3]);
  SCALE = atof(argv[4]);
  ORIGIN = atoi(argv[5]) * ECART;
  std::cout << "Generating map of " << x << " by " << y << std::endl;
  fs.open("map.xml", std::fstream::in | std::fstream::out | std::fstream::app);
  if (!fs.is_open()) {
    std::cout << "Error while openning map.xml" << std::endl;
    return (-1);
  }
  fs << "<scene>" << std::endl;
  fs << "  <parameters>" << std::endl;
  fs << "    <author>Joris Bertomeu</author>" << std::endl;
  fs << "    <id>0</id>" << std::endl;
  fs << "    <level>0</level>" << std::endl;
  fs << "    <date>0</date>" << std::endl;
  fs << "    <score>0</score>" << std::endl;
  fs << "    <bots>5</bots>" << std::endl;
  fs << "    <ia_difficulty></ia_difficulty>" << std::endl;
  fs << "  </parameters>" << std::endl;
  fs << "  <texture_pack>" << std::endl;
  fs << "    <texture>" << std::endl;
  fs << "      <id>idFloorTexture</id>" << std::endl;
  fs << "      <online>0</online>" << std::endl;
  fs << "      <file>assets/textures/floor_grass.tga</file>" << std::endl;
  fs << "    </texture>" << std::endl;
  fs << "  </texture_pack>" << std::endl;
  fs << "  <model_pack>" << std::endl;
  fs << "    <model>" << std::endl;
  fs << "      <id>idBoxModel</id>" << std::endl;
  fs << "      <online>0</online>" << std::endl;
  fs << "      <file>assets/models/WoodenBox02.fbx</file>" << std::endl;
  fs << "    </model>" << std::endl;
  fs << "    <model>" << std::endl;
  fs << "      <id>idBombermanModel</id>" << std::endl;
  fs << "      <online>0</online>" << std::endl;
  fs << "      <file>assets/models/marvin.fbx</file>" << std::endl;
  fs << "    </model>" << std::endl;
  fs << "  </model_pack>" << std::endl;
  fs << "  <sound_pack>" << std::endl;
  fs << "    <sound>" << std::endl;
  fs << "      <id>JUMP_SOUND</id>" << std::endl;
  fs << "      <online>0</online>" << std::endl;
  fs << "      <file>assets/sounds/jump.mp3</file>" << std::endl;
  fs << "    </sound>" << std::endl;
  fs << "  </sound_pack>" << std::endl;
  fs << "  <common>" << std::endl;
  fs << "    <width>" << x << "</width>" << std::endl;
  fs << "    <height>" << y << "</height>" << std::endl;
  fs << "    <gravity></gravity>" << std::endl;
  fs << "    <friction>3</friction>" << std::endl;
  fs << "    <skybox><online>0</online><file>NULL</file></skybox>" << std::endl;
  fs << "    <texture>idFloorTexture</texture>" << std::endl;
  fs << "  </common>" << std::endl;
  fs << "  <entities>" << std::endl;
  fs << "  <entity>" << std::endl;
  fs << "    <attribut>" << std::endl;
  fs << "      <speed>0</speed>" << std::endl;
  fs << "      <jump>0</jump>" << std::endl;
  fs << "      <weight>200</weight>" << std::endl;
  fs << "      <friction>1</friction>" << std::endl;
  fs << "      <move>0</move>" << std::endl;
  fs << "      <ability>NONE</ability>" << std::endl;
  fs << "      <range>0</range>" << std::endl;
  fs << "      <bonus>NONE</bonus>" << std::endl;
  fs << "    </attribut>" << std::endl;
  fs << "    <health>100</health>" << std::endl;
  fs << "    <type>BOMBERMAN</type>" << std::endl;
  fs << "    <name>Tony</name>" << std::endl;
  fs << "    <model>idBombermanModel</model>" << std::endl;
  fs << "    <texture>NULL</texture>" << std::endl;
  fs << "    <position>" << std::endl;
  fs << "      <x>" << (int) ORIGIN + x/2 << "</x>" << std::endl;
  fs << "      <y>0</y>" << std::endl;
  fs << "      <z>" << (int) ORIGIN + y/2 << "</z>" << std::endl;
  fs << "    </position>" << std::endl;
  fs << "    <size>" << std::endl;
  fs << "      <x>0.3</x>" << std::endl;
  fs << "      <y>0.3</y>" << std::endl;
  fs << "      <z>0.3</z>" << std::endl;
  fs << "    </size>" << std::endl;
  fs << "  </entity>" << std::endl;
  for (std::list<AEntity>::iterator it = this->_entityList.begin(); it != this->_entityList.end(); ++it) {
    ($it)->getType();
    fs << "  <entity>" << std::endl;
    fs << "    <attribut>" << std::endl;
    fs << "      <speed>0</speed>" << std::endl;
    fs << "      <jump>0</jump>" << std::endl;
    fs << "      <weight>200</weight>" << std::endl;
    fs << "      <friction>1</friction>" << std::endl;
    fs << "      <move>0</move>" << std::endl;
    fs << "      <ability>NONE</ability>" << std::endl;
    fs << "      <range>0</range>" << std::endl;
    fs << "      <bonus>NONE</bonus>" << std::endl;
    fs << "    </attribut>" << std::endl;
    fs << "    <health>100</health>" << std::endl;
    fs << "    <type>BRICK_WALL</type>" << std::endl;
    fs << "    <name>Tony</name>" << std::endl;
    fs << "    <model>idBoxModel</model>" << std::endl;
    fs << "    <texture>NULL</texture>" << std::endl;
    fs << "    <position>" << std::endl;
    fs << "      <x>" << ORIGIN + i * ECART << "</x>" << std::endl;
    fs << "      <y>0</y>" << std::endl;
    fs << "      <z>" << ORIGIN + 0 << "</z>" << std::endl;
    fs << "    </position>" << std::endl;
    fs << "    <size>" << std::endl;
    fs << "      <x>" << SCALE << "</x>" << std::endl;
    fs << "      <y>" << SCALE << "</y>" << std::endl;
    fs << "      <z>" << SCALE << "</z>" << std::endl;
    fs << "    </size>" << std::endl;
    fs << "  </entity>" << std::endl;

    fs << "  <entity>" << std::endl;
    fs << "    <attribut>" << std::endl;
    fs << "      <speed>0</speed>" << std::endl;
    fs << "      <jump>0</jump>" << std::endl;
    fs << "      <weight>200</weight>" << std::endl;
    fs << "      <friction>1</friction>" << std::endl;
    fs << "      <move>0</move>" << std::endl;
    fs << "      <ability>NONE</ability>" << std::endl;
    fs << "      <range>0</range>" << std::endl;
    fs << "      <bonus>NONE</bonus>" << std::endl;
    fs << "    </attribut>" << std::endl;
    fs << "    <health>100</health>" << std::endl;
    fs << "    <type>BRICK_WALL</type>" << std::endl;
    fs << "    <name>Tony</name>" << std::endl;
    fs << "    <model>idBoxModel</model>" << std::endl;
    fs << "    <texture>NULL</texture>" << std::endl;
    fs << "    <position>" << std::endl;
    fs << "      <x>" << ORIGIN + i * ECART << "</x>" << std::endl;
    fs << "      <y>0</y>" << std::endl;
    fs << "      <z>" << ORIGIN + y * ECART << "</z>" << std::endl;
    fs << "    </position>" << std::endl;
    fs << "    <size>" << std::endl;
    fs << "      <x>" << SCALE << "</x>" << std::endl;
    fs << "      <y>" << SCALE << "</y>" << std::endl;
    fs << "      <z>" << SCALE << "</z>" << std::endl;
    fs << "    </size>" << std::endl;
    fs << "  </entity>" << std::endl;
  }
  for (int i = 1; i < y; i++) {
    fs << "  <entity>" << std::endl;
    fs << "    <attribut>" << std::endl;
    fs << "      <speed>0</speed>" << std::endl;
    fs << "      <jump>0</jump>" << std::endl;
    fs << "      <weight>200</weight>" << std::endl;
    fs << "      <friction>1</friction>" << std::endl;
    fs << "      <move>0</move>" << std::endl;
    fs << "      <ability>NONE</ability>" << std::endl;
    fs << "      <range>0</range>" << std::endl;
    fs << "      <bonus>NONE</bonus>" << std::endl;
    fs << "    </attribut>" << std::endl;
    fs << "    <health>100</health>" << std::endl;
    fs << "    <type>BRICK_WALL</type>" << std::endl;
    fs << "    <name>Tony</name>" << std::endl;
    fs << "    <model>idBoxModel</model>" << std::endl;
    fs << "    <texture>NULL</texture>" << std::endl;
    fs << "    <position>" << std::endl;
    fs << "      <x>" << ORIGIN << "</x>" << std::endl;
    fs << "      <y>0</y>" << std::endl;
    fs << "      <z>" << ORIGIN + i * ECART << "</z>" << std::endl;
    fs << "    </position>" << std::endl;
    fs << "    <size>" << std::endl;
    fs << "      <x>" << SCALE << "</x>" << std::endl;
    fs << "      <y>" << SCALE << "</y>" << std::endl;
    fs << "      <z>" << SCALE << "</z>" << std::endl;
    fs << "    </size>" << std::endl;
    fs << "  </entity>" << std::endl;

    fs << "  <entity>" << std::endl;
    fs << "    <attribut>" << std::endl;
    fs << "      <speed>0</speed>" << std::endl;
    fs << "      <jump>0</jump>" << std::endl;
    fs << "      <weight>200</weight>" << std::endl;
    fs << "      <friction>1</friction>" << std::endl;
    fs << "      <move>0</move>" << std::endl;
    fs << "      <ability>NONE</ability>" << std::endl;
    fs << "      <range>0</range>" << std::endl;
    fs << "      <bonus>NONE</bonus>" << std::endl;
    fs << "    </attribut>" << std::endl;
    fs << "    <health>100</health>" << std::endl;
    fs << "    <type>BRICK_WALL</type>" << std::endl;
    fs << "    <name>Tony</name>" << std::endl;
    fs << "    <model>idBoxModel</model>" << std::endl;
    fs << "    <texture>NULL</texture>" << std::endl;
    fs << "    <position>" << std::endl;
    fs << "      <x>" << ORIGIN + x * ECART << "</x>" << std::endl;
    fs << "      <y>0</y>" << std::endl;
    fs << "      <z>" << ORIGIN + i * ECART << "</z>" << std::endl;
    fs << "    </position>" << std::endl;
    fs << "    <size>" << std::endl;
    fs << "      <x>" << SCALE << "</x>" << std::endl;
    fs << "      <y>" << SCALE << "</y>" << std::endl;
    fs << "      <z>" << SCALE << "</z>" << std::endl;
    fs << "    </size>" << std::endl;
    fs << "  </entity>" << std::endl;
  }
  fs << "  <entity>" << std::endl;
    fs << "    <attribut>" << std::endl;
    fs << "      <speed>0</speed>" << std::endl;
    fs << "      <jump>0</jump>" << std::endl;
    fs << "      <weight>200</weight>" << std::endl;
    fs << "      <friction>1</friction>" << std::endl;
    fs << "      <move>0</move>" << std::endl;
    fs << "      <ability>NONE</ability>" << std::endl;
    fs << "      <range>0</range>" << std::endl;
    fs << "      <bonus>NONE</bonus>" << std::endl;
    fs << "    </attribut>" << std::endl;
    fs << "    <health>100</health>" << std::endl;
    fs << "    <type>BRICK_WALL</type>" << std::endl;
    fs << "    <name>Tony</name>" << std::endl;
    fs << "    <model>idBoxModel</model>" << std::endl;
    fs << "    <texture>NULL</texture>" << std::endl;
    fs << "    <position>" << std::endl;
    fs << "      <x>" << ORIGIN + 0 << "</x>" << std::endl;
    fs << "      <y>0</y>" << std::endl;
    fs << "      <z>" << ORIGIN + 0 << "</z>" << std::endl;
    fs << "    </position>" << std::endl;
    fs << "    <size>" << std::endl;
    fs << "      <x>" << SCALE << "</x>" << std::endl;
    fs << "      <y>" << SCALE << "</y>" << std::endl;
    fs << "      <z>" << SCALE << "</z>" << std::endl;
    fs << "    </size>" << std::endl;
    fs << "  </entity>" << std::endl;
    fs << "  <entity>" << std::endl;
    fs << "    <attribut>" << std::endl;
    fs << "      <speed>0</speed>" << std::endl;
    fs << "      <jump>0</jump>" << std::endl;
    fs << "      <weight>200</weight>" << std::endl;
    fs << "      <friction>1</friction>" << std::endl;
    fs << "      <move>0</move>" << std::endl;
    fs << "      <ability>NONE</ability>" << std::endl;
    fs << "      <range>0</range>" << std::endl;
    fs << "      <bonus>NONE</bonus>" << std::endl;
    fs << "    </attribut>" << std::endl;
    fs << "    <health>100</health>" << std::endl;
    fs << "    <type>BRICK_WALL</type>" << std::endl;
    fs << "    <name>Tony</name>" << std::endl;
    fs << "    <model>idBoxModel</model>" << std::endl;
    fs << "    <texture>NULL</texture>" << std::endl;
    fs << "    <position>" << std::endl;
    fs << "      <x>" << ORIGIN + 0 << "</x>" << std::endl;
    fs << "      <y>0</y>" << std::endl;
    fs << "      <z>" << ORIGIN + y * ECART << "</z>" << std::endl;
    fs << "    </position>" << std::endl;
    fs << "    <size>" << std::endl;
    fs << "      <x>" << SCALE << "</x>" << std::endl;
    fs << "      <y>" << SCALE << "</y>" << std::endl;
    fs << "      <z>" << SCALE << "</z>" << std::endl;
    fs << "    </size>" << std::endl;
    fs << "  </entity>" << std::endl;
    fs << "  <entity>" << std::endl;
    fs << "    <attribut>" << std::endl;
    fs << "      <speed>0</speed>" << std::endl;
    fs << "      <jump>0</jump>" << std::endl;
    fs << "      <weight>200</weight>" << std::endl;
    fs << "      <friction>1</friction>" << std::endl;
    fs << "      <move>0</move>" << std::endl;
    fs << "      <ability>NONE</ability>" << std::endl;
    fs << "      <range>0</range>" << std::endl;
    fs << "      <bonus>NONE</bonus>" << std::endl;
    fs << "    </attribut>" << std::endl;
    fs << "    <health>100</health>" << std::endl;
    fs << "    <type>BRICK_WALL</type>" << std::endl;
    fs << "    <name>Tony</name>" << std::endl;
    fs << "    <model>idBoxModel</model>" << std::endl;
    fs << "    <texture>NULL</texture>" << std::endl;
    fs << "    <position>" << std::endl;
    fs << "      <x>" << ORIGIN + x * ECART << "</x>" << std::endl;
    fs << "      <y>0</y>" << std::endl;
    fs << "      <z>" << ORIGIN + 0 << "</z>" << std::endl;
    fs << "    </position>" << std::endl;
    fs << "    <size>" << std::endl;
    fs << "      <x>" << SCALE << "</x>" << std::endl;
    fs << "      <y>" << SCALE << "</y>" << std::endl;
    fs << "      <z>" << SCALE << "</z>" << std::endl;
    fs << "    </size>" << std::endl;
    fs << "  </entity>" << std::endl;
    fs << "  <entity>" << std::endl;
    fs << "    <attribut>" << std::endl;
    fs << "      <speed>0</speed>" << std::endl;
    fs << "      <jump>0</jump>" << std::endl;
    fs << "      <weight>200</weight>" << std::endl;
    fs << "      <friction>1</friction>" << std::endl;
    fs << "      <move>0</move>" << std::endl;
    fs << "      <ability>NONE</ability>" << std::endl;
    fs << "      <range>0</range>" << std::endl;
    fs << "      <bonus>NONE</bonus>" << std::endl;
    fs << "    </attribut>" << std::endl;
    fs << "    <health>100</health>" << std::endl;
    fs << "    <type>BRICK_WALL</type>" << std::endl;
    fs << "    <name>Tony</name>" << std::endl;
    fs << "    <model>idBoxModel</model>" << std::endl;
    fs << "    <texture>NULL</texture>" << std::endl;
    fs << "    <position>" << std::endl;
    fs << "      <x>" << ORIGIN + x * ECART << "</x>" << std::endl;
    fs << "      <y>0</y>" << std::endl;
    fs << "      <z>" << ORIGIN + y * ECART << "</z>" << std::endl;
    fs << "    </position>" << std::endl;
    fs << "    <size>" << std::endl;
    fs << "      <x>" << SCALE << "</x>" << std::endl;
    fs << "      <y>" << SCALE << "</y>" << std::endl;
    fs << "      <z>" << SCALE << "</z>" << std::endl;
    fs << "    </size>" << std::endl;
    fs << "  </entity>" << std::endl;
    fs << "  </entities>" << std::endl;

    fs << "</scene>" << std::endl;
    fs.close();
}
